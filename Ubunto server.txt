Ubunto server
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ mkdir -p ~/aws
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ cp /mnt/c/Users/Ricardo/Desktop/Eleos/Tooling\ Project/tooling-project-server.pem ~/aws/
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ chmod 400 ~/aws/tooling-project-server.pem
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls -l ~/aws/tooling-project-server/pem
ls: cannot access '/home/floppa63/aws/tooling-project-server/pem': No such file or directory
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls
tooling-project-server.pem  webserver.py
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls -l ~/aws/tooling-project-server.pem
-r-------- 1 floppa63 floppa63 1674 Jul 23 14:47 /home/floppa63/aws/tooling-project-server.pem
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$












un a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

floppa63@LAPTOP-RTSL2B52:~$ cd /mnt/c/Users/Ricardo/Desktop/Eleos/Tooling\ Project
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ sudo chmod 400 tooling-project-server.pem
[sudo] password for floppa63:
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls -l tooling-project-server.pem
-r-xr-xr-x 1 floppa63 floppa63 1674 Jul 23 14:16 tooling-project-server.pem
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ mkdir -p ~/aws
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ cp /mnt/c/Users/Ricardo/Desktop/Eleos/Tooling\ Project/tooling-project-server.pem ~/aws/
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ chmod 400 ~/aws/tooling-project-server.pem
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls -l ~/aws/tooling-project-server/pem
ls: cannot access '/home/floppa63/aws/tooling-project-server/pem': No such file or directory
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls
tooling-project-server.pem  webserver.py
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ls -l ~/aws/tooling-project-server.pem
-r-------- 1 floppa63 floppa63 1674 Jul 23 14:47 /home/floppa63/aws/tooling-project-server.pem
floppa63@LAPTOP-RTSL2B52:/mnt/c/Users/Ricardo/Desktop/Eleos/Tooling Project$ ssh -i ~/aws/tooling-project-server.pem ec2-user@ec2-18-222-202-137.us-east-2.compute.amazonaws.com
   ,     #_
   ~\_  ####_        Amazon Linux 2
  ~~  \_#####\
  ~~     \###|       AL2 End of Life is 2025-06-30.
  ~~       \#/ ___
   ~~       V~' '->
    ~~~         /    A newer version of Amazon Linux is available!
      ~~._.   _/
         _/ _/       Amazon Linux 2023, GA and supported until 2028-03-15.
       _/m/'           https://aws.amazon.com/linux/amazon-linux-2023/

[ec2-user@ip-172-31-21-233 ~]$ sudo su
[root@ip-172-31-21-233 ec2-user]# yum update
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
amzn2-core                                                                                       | 3.6 kB  00:00:00
No packages marked for update
[root@ip-172-31-21-233 ec2-user]# yum install git
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
Resolving Dependencies
--> Running transaction check
---> Package git.x86_64 0:2.40.1-1.amzn2.0.3 will be installed
--> Processing Dependency: git-core = 2.40.1-1.amzn2.0.3 for package: git-2.40.1-1.amzn2.0.3.x86_64
--> Processing Dependency: git-core-doc = 2.40.1-1.amzn2.0.3 for package: git-2.40.1-1.amzn2.0.3.x86_64
--> Processing Dependency: perl-Git = 2.40.1-1.amzn2.0.3 for package: git-2.40.1-1.amzn2.0.3.x86_64
--> Processing Dependency: perl(Git) for package: git-2.40.1-1.amzn2.0.3.x86_64
--> Processing Dependency: perl(Term::ReadKey) for package: git-2.40.1-1.amzn2.0.3.x86_64
--> Running transaction check
---> Package git-core.x86_64 0:2.40.1-1.amzn2.0.3 will be installed
---> Package git-core-doc.noarch 0:2.40.1-1.amzn2.0.3 will be installed
---> Package perl-Git.noarch 0:2.40.1-1.amzn2.0.3 will be installed
--> Processing Dependency: perl(Error) for package: perl-Git-2.40.1-1.amzn2.0.3.noarch
---> Package perl-TermReadKey.x86_64 0:2.30-20.amzn2.0.2 will be installed
--> Running transaction check
---> Package perl-Error.noarch 1:0.17020-2.amzn2 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

========================================================================================================================
 Package                        Arch                 Version                             Repository                Size
========================================================================================================================
Installing:
 git                            x86_64               2.40.1-1.amzn2.0.3                  amzn2-core                54 k
Installing for dependencies:
 git-core                       x86_64               2.40.1-1.amzn2.0.3                  amzn2-core                10 M
 git-core-doc                   noarch               2.40.1-1.amzn2.0.3                  amzn2-core               3.0 M
 perl-Error                     noarch               1:0.17020-2.amzn2                   amzn2-core                32 k
 perl-Git                       noarch               2.40.1-1.amzn2.0.3                  amzn2-core                42 k
 perl-TermReadKey               x86_64               2.30-20.amzn2.0.2                   amzn2-core                31 k

Transaction Summary
========================================================================================================================
Install  1 Package (+5 Dependent packages)

Total download size: 13 M
Installed size: 44 M
Is this ok [y/d/N]: y
Downloading packages:
(1/6): git-2.40.1-1.amzn2.0.3.x86_64.rpm                                                         |  54 kB  00:00:00
(2/6): git-core-doc-2.40.1-1.amzn2.0.3.noarch.rpm                                                | 3.0 MB  00:00:00
(3/6): perl-Error-0.17020-2.amzn2.noarch.rpm                                                     |  32 kB  00:00:00
(4/6): git-core-2.40.1-1.amzn2.0.3.x86_64.rpm                                                    |  10 MB  00:00:00
(5/6): perl-Git-2.40.1-1.amzn2.0.3.noarch.rpm                                                    |  42 kB  00:00:00
(6/6): perl-TermReadKey-2.30-20.amzn2.0.2.x86_64.rpm                                             |  31 kB  00:00:00
------------------------------------------------------------------------------------------------------------------------
Total                                                                                    44 MB/s |  13 MB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : git-core-2.40.1-1.amzn2.0.3.x86_64                                                                   1/6
  Installing : git-core-doc-2.40.1-1.amzn2.0.3.noarch                                                               2/6
  Installing : 1:perl-Error-0.17020-2.amzn2.noarch                                                                  3/6
  Installing : perl-TermReadKey-2.30-20.amzn2.0.2.x86_64                                                            4/6
  Installing : perl-Git-2.40.1-1.amzn2.0.3.noarch                                                                   5/6
  Installing : git-2.40.1-1.amzn2.0.3.x86_64                                                                        6/6
  Verifying  : perl-TermReadKey-2.30-20.amzn2.0.2.x86_64                                                            1/6
  Verifying  : git-2.40.1-1.amzn2.0.3.x86_64                                                                        2/6
  Verifying  : 1:perl-Error-0.17020-2.amzn2.noarch                                                                  3/6
  Verifying  : git-core-2.40.1-1.amzn2.0.3.x86_64                                                                   4/6
  Verifying  : git-core-doc-2.40.1-1.amzn2.0.3.noarch                                                               5/6
  Verifying  : perl-Git-2.40.1-1.amzn2.0.3.noarch                                                                   6/6

Installed:
  git.x86_64 0:2.40.1-1.amzn2.0.3

Dependency Installed:
  git-core.x86_64 0:2.40.1-1.amzn2.0.3 git-core-doc.noarch 0:2.40.1-1.amzn2.0.3    perl-Error.noarch 1:0.17020-2.amzn2
  perl-Git.noarch 0:2.40.1-1.amzn2.0.3 perl-TermReadKey.x86_64 0:2.30-20.amzn2.0.2

Complete!
[root@ip-172-31-21-233 ec2-user]# git clone https://github.com/ricky643/tooling-project.git
Cloning into 'tooling-project'...
Username for 'https://github.com': ricky643
Password for 'https://ricky643@github.com':
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/ricky643/tooling-project.git/'
[root@ip-172-31-21-233 ec2-user]# git clone https://github.com/ricky643/tooling-project.git
Cloning into 'tooling-project'...
Username for 'https://github.com': ricky643
Password for 'https://ricky643@github.com':
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/ricky643/tooling-project.git/'
[root@ip-172-31-21-233 ec2-user]# git clone https://github.com/ricky643/tooling-project.git
Cloning into 'tooling-project'...
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (6/6), done.
[root@ip-172-31-21-233 ec2-user]# ls
tooling-project
[root@ip-172-31-21-233 ec2-user]# python3
Python 3.7.16 (default, May  6 2024, 19:30:00)
[GCC 7.3.1 20180712 (Red Hat 7.3.1-17)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> exit(0
... exit()
  File "<stdin>", line 2
    exit()
       ^
SyntaxError: invalid syntax
>>> ls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ls' is not defined
>>> ls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ls' is not defined
>>>
>>> pip
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pip' is not defined
>>> sudo su
  File "<stdin>", line 1
    sudo su
          ^
SyntaxError: invalid syntax
>>> exit()
[root@ip-172-31-21-233 ec2-user]# pip
bash: pip: command not found
[root@ip-172-31-21-233 ec2-user]# yum install python3-pip
Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
amzn2-core                                                                                       | 3.6 kB  00:00:00
Package python3-pip-20.2.2-1.amzn2.0.5.noarch already installed and latest version
Nothing to do
[root@ip-172-31-21-233 ec2-user]# python3-pip
bash: python3-pip: command not found
[root@ip-172-31-21-233 ec2-user]# python3 -m pip

Usage:
  /bin/python3 -m pip <command> [options]

Commands:
  install                     Install packages.
  download                    Download packages.
  uninstall                   Uninstall packages.
  freeze                      Output installed packages in requirements format.
  list                        List installed packages.
  show                        Show information about installed packages.
  check                       Verify installed packages have compatible dependencies.
  config                      Manage local and global configuration.
  search                      Search PyPI for packages.
  cache                       Inspect and manage pip's wheel cache.
  wheel                       Build wheels from your requirements.
  hash                        Compute hashes of package archives.
  completion                  A helper command used for command completion.
  debug                       Show information useful for debugging.
  help                        Show help for commands.

General Options:
  -h, --help                  Show help.
  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.
  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to
                              WARNING, ERROR, and CRITICAL logging levels).
  --log <path>                Path to a verbose appending log.
  --no-input                  Disable prompting for input.
  --proxy <proxy>             Specify a proxy in the form [user:passwd@]proxy.server:port.
  --retries <retries>         Maximum number of retries each connection should attempt (default 5 times).
  --timeout <sec>             Set the socket timeout (default 15 seconds).
  --exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup,
                              (a)bort.
  --trusted-host <hostname>   Mark this host or host:port pair as trusted, even though it does not have valid or any
                              HTTPS.
  --cert <path>               Path to alternate CA bundle.
  --client-cert <path>        Path to SSL client certificate, a single file containing the private key and the
                              certificate in PEM format.
  --cache-dir <dir>           Store the cache data in <dir>.
  --no-cache-dir              Disable the cache.
  --disable-pip-version-check
                              Don't periodically check PyPI to determine whether a new version of pip is available for
                              download. Implied with --no-index.
  --no-color                  Suppress colored output
  --no-python-version-warning
                              Silence deprecation warnings for upcoming unsupported Pythons.
  --use-feature <feature>     Enable new functionality, that may be backward incompatible.
  --use-deprecated <feature>  Enable deprecated functionality, that will be removed in the future.
[root@ip-172-31-21-233 ec2-user]# ls
tooling-project
[root@ip-172-31-21-233 ec2-user]# cd tooling-project
[root@ip-172-31-21-233 tooling-project]# ls
python.py
[root@ip-172-31-21-233 tooling-project]# python3 -m pip install --r requirements.txt

Usage:
  /bin/python3 -m pip install [options] <requirement specifier> [package-index-options] ...
  /bin/python3 -m pip install [options] -r <requirements file> [package-index-options] ...
  /bin/python3 -m pip install [options] [-e] <vcs project url> ...
  /bin/python3 -m pip install [options] [-e] <local project path> ...
  /bin/python3 -m pip install [options] <archive url/path> ...

ambiguous option: --r (--require-hashes, --require-venv, --require-virtualenv, --requirement, --retries, --root?)
[root@ip-172-31-21-233 tooling-project]# python3 -m pip install -r requirements.txt
WARNING: Running pip install with root privileges is generally not a good idea. Try `python3 -m pip install --user` instead.
ERROR: Could not open requirements file: [Errno 2] No such file or directory: 'requirements.txt'
[root@ip-172-31-21-233 tooling-project]# python3 python.py
Server running on port 8000
